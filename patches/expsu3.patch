diff --git a/include/quda_matrix.h b/include/quda_matrix.h
index 3167df0..c9836fe 100644
--- a/include/quda_matrix.h
+++ b/include/quda_matrix.h
@@ -1064,7 +1064,25 @@ namespace quda {
         - q(3) * q(1) * q(8) - q(0) * q(7) * q(5);
 
       Complex sg2h3 = sqrt(a3 * a3 - (Float)4. * a2 * a2 * a2);
-      Complex cp = exp(log((Float)0.5 * (a3 + sg2h3)) / (Float)3.0);
+
+      // If the matrix q is zero, then this algorithm produces nan instead of unity.
+      // The first invalid operation is the log hereafter, therefore we check if the
+      // argument is zero and also test that the matrix q is fully zero. Then return unity.
+
+      Complex tmp = a3 + sg2h3;
+      if (tmp.x == 0 and tmp.y==0) {
+	for(int i=0; i<9; i++) {
+	  if(q(i).x!=0 or q(i).y!=0) {
+	    errorQuda("Expected all zeros entries");
+	  }
+	  q(0)=1;
+	  q(4)=1;
+	  q(8)=1;
+	  return;
+	}
+      }
+      
+      Complex cp = exp(log((Float)0.5 * tmp) / (Float)3.0);
       Complex cm = a2 / cp;
 
       Complex r1 = exp(Complex(0.0, 1.0) * (Float)(2.0 * M_PI / 3.0));
